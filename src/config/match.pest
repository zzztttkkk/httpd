WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT    = _{ "#" ~ (!"\n" ~ ANY)* }

ident   = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "-" | "_")* }
string  = ${ "\"" ~ inner ~ "\"" }
inner   = @{ char* }
char    =  {
    !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
}
strgins =  { "[" ~ (string) ~ ("," ~ string)* ~ "]" }
int     = @{ (ASCII_DIGIT)+ }
ints    =  { "[" ~ (int) ~ ("," ~ int)* ~ "]" }

Logics = { ^"and" | ^"or" }

PartKinds = { ^"code" | ^"method" | ^"path" | ^"query" | ^"header" | ^"cookie" | ^"useragent" | ^"ua" | ^"form" | ^"json" | ^"ref" }

MultiValuesOpts    = { ^"all" | ^"any" | ^"first" | ^"last" | (^"nth(" ~ int ~ ")") }
ConditionLeftParam = { "<" ~ ident ~ (":" ~ MultiValuesOpts)? ~ ">" }
ConditionLeft      = { PartKinds ~ (ConditionLeftParam)? }

MatchQoutedStringOpKinds = { ^"eq" | ^"gt" | ^"lt" | ^"ge" | ^"le" | ^"contains" | ^"match" }
MatchQoutedStringOp      = { MatchQoutedStringOpKinds ~ string }

MatchIntOpKinds = { "==" | ">" | "<" | ">=" | "<=" }
MatchIntOp      = { MatchIntOpKinds ~ int }

MatchInStringsOp  = { ^"in" ~ strgins }
MatchHasStringsOp = { ^"has" ~ strgins }
MatchInIntsOp     = { ^"in" ~ ints }

MatchgOp = { MatchQoutedStringOp | MatchIntOp | MatchInStringsOp | MatchHasStringsOp | MatchInIntsOp }

MatchOptions = { ^"not" | ^"trim" | ^"ignorecase" }

Condition = { ConditionLeft ~ (MatchOptions)* ~ (MatchgOp)? }

Match = {
    "match" ~ ident ~ ":" ~ Logics ~ "{" ~ (Condition ~ ";")+ ~ "}"
}

File = {
    SOI ~ (Match)+ ~ EOI
}
